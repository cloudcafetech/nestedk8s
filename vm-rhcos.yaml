apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  labels:
    kubevirt.io/vm: coreos
  name: coreos
spec:
  dataVolumeTemplates:
  - metadata:
      name: coreos-dv
      annotations:
        kubevirt.io/provisionOnNode: kubevirt-control-plane
    spec:
      pvc:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
        storageClassName: hostpath-storage
      source:
        registry:
          url: "docker://quay.io/containerdisks/rhcos:4.9"
          pullMethod: node # [(Not node name) node pullMode uses host cache for container images]
  running: true
  template:
    metadata:
      labels:
        kubevirt.io/vm: coreos
    spec:
      nodeSelector:
        kubernetes.io/hostname: kubevirt-control-plane
      domain:
        devices:
          disks:
          - disk:
              bus: virtio
            name: dv
          - disk:
              bus: virtio
            name: cloudinitdisk
          interfaces:
          - name: default
            bridge: {}
        resources:
          requests:
            memory: 2G
            cpu: "2000m"
      networks:
      - name: default
        pod: {}
      terminationGracePeriodSeconds: 0
      volumes:
      - dataVolume:
          name: coreos-dv
        name: dv
      - cloudInitConfigDrive:
          userData: |
            {
              "ignition": {
                "config": {},
                "proxy": {},
                "security": {},
                "timeouts": {},
                "version": "3.2.0"
              },
              "passwd": {
                "users": [
                  {
                    "name": "coreos",
                    "sshAuthorizedKeys": [
                      "ssh-rsa PUBLIC_SSH_KEY"
                    ]
                  }
                ]
              },
              "storage": {},
              "systemd": {
                "units": [
                  {
                    "dropins": [
                      {
                        "contents": "[Service]\n# Override Execstart in main unit\nExecStart=\n# Add new Execstart with `-` prefix to ignore failure`\nExecStart=-/usr/sbin/agetty --autologin core --noclear %I $TERM\n",
                        "name": "autologin-core.conf"
                      }
                    ],
                    "name": "serial-getty@ttyS0.service"
                  }
                ]
              }
            }
          networkData: |
            {
              "version": 2,
              "ethernets": {
                "enp1s0": {
                  "dhcp4": true
                },
                "enp2s0": {
                 "dhcp4": true
                }
              }
            }
        name: cloudinitdisk
